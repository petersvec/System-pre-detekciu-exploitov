/*
 * Copyright (C) 2017 Lukas Lences
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package tismanetflower;

import helpers.TLogger;
import helpers.TProperties;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.commons.cli.*;

/**
 *
 * @author Lukas Lences
 */
public class Netflower {
    private final static Logger LOGGER = Logger.getLogger(TLogger.class.getName());
    private static String configFile;
    private static ReaderFromQueue reader;
    
    public static void main(String[] args) throws InterruptedException{
        parseOptions(args);
        TProperties.setTProperties(configFile);
        TLogger.setTLogger();
        reader = new ReaderFromQueue();
        File tempFile;
        
        while((tempFile = reader.readFile()) != null){
            printStat(tempFile.getAbsolutePath());
            reader.deleteFile(tempFile);
        }
        reader.closeConnection();
    }
    
    static void printStat(String n){    
        try {
            LOGGER.log(Level.INFO, "Running script: sudo " + TProperties.script + " " + n);
            String target = new String("sudo " + TProperties.script + " " + n);
            Runtime rt = Runtime.getRuntime();
            Process proc = rt.exec(target);
            proc.waitFor();
        } catch (IOException | InterruptedException ex) {
            LOGGER.log(Level.SEVERE, null, ex);
        }        
    }
    
     static void parseOptions(String[] args) {
        Options options = new Options();
        CommandLineParser parser = new DefaultParser();
        HelpFormatter formatter = new HelpFormatter();
        CommandLine cmd;

        Option inputConfigFile = new Option("c", "config", true, "Config/properties file.");
        inputConfigFile.setRequired(true);
        options.addOption(inputConfigFile);

        try {
            cmd = parser.parse(options, args);

        } catch (ParseException ex) {
            System.out.println(ex.getMessage());
            formatter.printHelp("java -jar Netflower.jar -c TismaNetflower.properties", options);

            System.exit(1);
            return;
        }
        configFile = cmd.getOptionValue("config");
    }
}
