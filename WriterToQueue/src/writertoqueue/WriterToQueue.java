/*
 * Copyright (C) 2017 Lukas Lences
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package writertoqueue;

import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.commons.cli.*;

public class WriterToQueue {
    private final static Logger LOGGER = Logger.getLogger(WLogger.class.getName());
    static private String configFile; 
    static WGetter getter;
    static WWriter writer;
    
    public static void main(String[] args) {
        parseOptions(args);        
        WProperties.setWProperties(configFile);        
        WLogger.setTLogger();
        
        getter = new WGetter();       
        writer = new WWriter();        
        
        LOGGER.log(Level.INFO, "Application started.");
        
        for (String filename : getter.filenames){
            if (filename.endsWith(WProperties.allowedFiles)){
                File f = new File(filename);                
                writer.sendFile(f);
            }
        }
        writer.closeConnection();
        LOGGER.log(Level.INFO, "Application stopped.");
    }
    
    static void parseOptions(String[] args) {
        Options options = new Options();
        CommandLineParser parser = new DefaultParser();
        HelpFormatter formatter = new HelpFormatter();
        CommandLine cmd;

        Option inputConfigFile = new Option("c", "config", true, "Config/properties file.");
        inputConfigFile.setRequired(true);
        options.addOption(inputConfigFile);

        try {
            cmd = parser.parse(options, args);

        } catch (ParseException ex) {
            System.out.println(ex.getMessage());
            formatter.printHelp("java -jar tisma-writer.jar -c writer.properties", options);

            System.exit(1);
            return;
        }
        configFile = cmd.getOptionValue("config");
    }
}
