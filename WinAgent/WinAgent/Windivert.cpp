#include "Windivert.hpp"

Windivert::~Windivert()
{
	if (mWindivert)
		WinDivertClose(mWindivert);
}

bool Windivert::init(const Configuration &config)
{
	bool ret{ true };

	// vytvorenie windivert filtra
	mWindivert = WinDivertOpen(config.getWindivertFilter().c_str(), WINDIVERT_LAYER_NETWORK, 0, WINDIVERT_FLAG_SNIFF);

	if (mWindivert == INVALID_HANDLE_VALUE)
	{
		ret = false;
		std::cout << "WinDivertOpen invalid handle value!" << std::endl;
		return ret;
	}

	// nastavenie velkosti fronty
	if (!WinDivertSetParam(mWindivert, WINDIVERT_PARAM_QUEUE_LEN, config.getQueueLenght()))
	{
		ret = false;
		std::cout << "Failed to set queue length!" << std::endl;
		return ret;
	}

	// nastavenie casu paketu
	if (!WinDivertSetParam(mWindivert, WINDIVERT_PARAM_QUEUE_TIME, config.getQueueTime()))
	{
		ret = false;
		std::cout << "Failed to set queue time!" << std::endl;
		return ret;
	}

	return ret;
}

void Windivert::run()
{
	while (TRUE)
	{
		// ...
	}
}