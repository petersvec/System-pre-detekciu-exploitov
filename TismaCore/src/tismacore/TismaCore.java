/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tismacore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.concurrent.Semaphore;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.commons.cli.*;
import tismacore.helpers.MQReader;
import tismacore.helpers.Reader;
import tismacore.helpers.TLogger;
import tismacore.helpers.TProperties;

/**
 *
 * @author Lukas Lences
 */
public class TismaCore {

    private final static Logger LOGGER = Logger.getLogger(TLogger.class.getName());
    public static HashMap<String, Integer> botnetIpaddrsMap;
    static String configFile;
    public static Semaphore s;

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        parseOptions(args);
        TProperties.setVariables(configFile);
        TLogger.setTLogger();
        botnetIpaddrsMap = new HashMap<>();
        LOGGER.log(Level.INFO, "Starting application TismaCore.");
        LOGGER.log(Level.INFO, "Application mode: " + TProperties.mode);
        s = new Semaphore(TProperties.semaphores);

        switch (TProperties.mode) {
            case "train":
                ArrayList<String> trainingFiles = Reader.readFilesInDirectory(TProperties.trainDirectory);
                for (String f : trainingFiles) {
                    NetFlowReader r = new NetFlowReader(f);
                    s.acquire();
                    r.t.start();
                }

                for (int i = 0; i < TProperties.semaphores; i++) {
                    s.acquire();
                }
                //na zaver nad celym treba spravit jrip
                TJRIP tjrip = new TJRIP(TProperties.tismaDirectory + "/instances/s" + TProperties.sensitivity);
                TREPTree trep = new TREPTree(TProperties.tismaDirectory + "/instances/s" + TProperties.sensitivity);
                break;
            case "run":
                if (TProperties.runDirectory.compareToIgnoreCase("mqbroker") == 0){
                   MQReader reader = new MQReader(TProperties.netflowsQueue);
                   reader.readNetflowFromQueue(TProperties.netflowsTmpDir);
                   ArrayList<String> runFiles = Reader.readFilesInDirectory(TProperties.netflowsTmpDir);
                for (String f : runFiles) {
                    NetFlowReader r;
                    if (f.endsWith(".unlabeled")) {
                        r = new NetFlowReader(f);
                        s.acquire();
                        r.t.start();
                    }
                }
                   
                } else {
                ArrayList<String> runFiles = Reader.readFilesInDirectory(TProperties.runDirectory);
                for (String f : runFiles) {
                    NetFlowReader r;
                    if (f.endsWith(".unlabeled")) {
                        r = new NetFlowReader(f);
                        s.acquire();
                        r.t.start();
                    }
                }
                }
                break;
            default:
                System.err.println("Unknown starting mode. Check config file: " + configFile);
                System.exit(1);
        }
    }

    static void parseOptions(String[] args) {
        Options options = new Options();
        CommandLineParser parser = new DefaultParser();
        HelpFormatter formatter = new HelpFormatter();
        CommandLine cmd;

        Option inputConfigFile = new Option("c", "config-file", true, "Config/properties file.");
        inputConfigFile.setRequired(true);
        options.addOption(inputConfigFile);

        try {
            cmd = parser.parse(options, args);

        } catch (ParseException ex) {
            System.out.println(ex.getMessage());
            formatter.printHelp("java -jar tismacore.jar -c Tismacore.properties", options);

            System.exit(1);
            return;
        }
        configFile = cmd.getOptionValue("config-file");
    }
}
