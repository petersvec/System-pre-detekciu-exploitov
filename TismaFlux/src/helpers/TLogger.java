/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package helpers;

import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;

/**
 *
 * @author Lukas Lences
 */
public class TLogger {
    private final static Logger LOGGER = Logger.getLogger(TLogger.class.getName());
    private static FileHandler fileHandler;
    
    public static void setTLogger(String logFile, String logLevel){
        try {
              checkDirectory(logFile);
              String pattern = logFile + "/tisma-flux.%g.log";
            fileHandler = new FileHandler(pattern, 10485796, 5, true);
            SimpleFormatter smf = new SimpleFormatter();

            fileHandler.setFormatter(new SimpleFormatter() {
                public String format(LogRecord record) {
                    Date t = new Date(System.currentTimeMillis());
                    return t + " - [" + record.getLevel() + "] "
                            + record.getSourceClassName() + " -- "
                            + record.getSourceMethodName() + " -- "
                            + record.getThreadID() + " -- "
                            + record.getMessage() + "\n";
                }
            });

            LOGGER.addHandler(fileHandler);
            LOGGER.setLevel(Level.parse(logLevel));
            LOGGER.log(Level.CONFIG, "Logging was set to level " + logLevel);
        } catch (IOException | SecurityException ex) {
            Logger.getLogger(TLogger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
       static void checkDirectory(String path){
        File directory = new File(String.valueOf(path));
        if (!directory.getParentFile().exists()){
            checkDirectory(directory.getParent());
        }
        if (!directory.exists()){
            directory.mkdir();
        }
    }
}