/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tisma.fflux;

import helpers.TLogger;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.JMSException;
import javax.jms.MessageConsumer;
import javax.jms.Queue;
import javax.jms.Session;
import org.apache.activemq.ActiveMQConnection;
import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.activemq.BlobMessage;

/**
 *
 * @author Lukas Lences
 */
public class ReaderFromQueue {
    private final static Logger LOGGER = Logger.getLogger(TLogger.class.getName());
    ConnectionFactory connectionFactory;
    Connection connection;
    Session session;
    Queue destination;
    MessageConsumer consumer;
            
    String url, queue;

    ReaderFromQueue(String mqUrl, String q) throws JMSException, IOException {
        queue = q;
        url = mqUrl;
        try {
        LOGGER.log(Level.INFO, "Trying connect to " + url);
        connectionFactory = new ActiveMQConnectionFactory(url);
        connection = (ActiveMQConnection) connectionFactory.createConnection();
        connection.start();
        session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
        destination = session.createQueue(queue);
        consumer = session.createConsumer(destination);
        LOGGER.log(Level.INFO, "Connection established.");
        } catch (JMSException ex)
        {
        }
    }
    
 
    public File readFile() {        
        File tempFile = null;
        try{            
            LOGGER.log(Level.INFO, "Trying reading file...");
            BlobMessage blobMessage = (BlobMessage) consumer.receive();
            
            String dir = "/tmp/";
            String PREFIX = blobMessage.getStringProperty("FILE.NAME");
            String SUFFIX = ".tmp";
            
            tempFile = File.createTempFile(dir + PREFIX, SUFFIX);
            tempFile.deleteOnExit();
            
            InputStream in = blobMessage.getInputStream();
            LOGGER.log(Level.INFO, "Saving file: " + PREFIX);
            try(FileOutputStream out = new FileOutputStream(tempFile)){
                byte[] buffer = new byte[1024];
                while(true){
                    int bytesRead = in.read(buffer);
                    if (bytesRead == -1) {
                        break;
                    }
                    
                    out.write(buffer, 0, bytesRead);
                }
                out.close();
            }            
        }   catch (JMSException ex) {
            LOGGER.log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            LOGGER.log(Level.SEVERE, null, ex);
        } finally {
            return tempFile;
        }
    }
    
    public void closeConnection(){
        try {
            connection.close();
        } catch (JMSException ex) {
            Logger.getLogger(ReaderFromQueue.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void deleteFile(File tempFile){        
        tempFile.delete();
    }
}
