/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tisma.fflux;

import helpers.TLogger;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.JMSException;
import javax.jms.MessageProducer;
import javax.jms.Queue;
import javax.jms.Session;
import javax.jms.TextMessage;
import org.apache.activemq.ActiveMQConnectionFactory;
import org.json.simple.JSONObject;

/**
 *
 * @author Lukas Lences
 */
public class FluxToQueue {
    private final static Logger LOGGER = Logger.getLogger(TLogger.class.getName());
    
    static void sendToFastFlux(String url, JSONObject obj, String queue) throws JMSException{
        ConnectionFactory factory = new ActiveMQConnectionFactory(url);
        Connection connection = factory.createConnection();
        connection.start();
        LOGGER.log(Level.FINE, "Open connection. MQ BROKER: " + url);
        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
        Queue destination = session.createQueue(queue);
        MessageProducer producer = session.createProducer(destination);
        TextMessage message = session.createTextMessage();
        String text = obj.toJSONString();
        message.setText(text);
        LOGGER.log(Level.FINE, "MESSAGE: " + text);
        producer.send(message);
        connection.close();
        LOGGER.log(Level.FINE, "CONNECTION CLOSED");
    }
}
